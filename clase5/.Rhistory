knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
geo <- read_sf("./data/provincias.geojson")
head(geo)
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
ggplot(geo)+
geom_sf()
df <- readxl::read_xlsx("data/Integrado_HD_base_usuaria_2017-2020.xlsx")
#Formato
patagonia <- df %>% filter(provincia %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO"))
#Join
geo <- geo %>% left_join(patagonia, by=c("nomprov"="provincia"))
tb1 <- geo%>%
filter(anio == 2020) %>%
group_by(nomprov)%>%
summarise(n=n_distinct(Id_hecho, na.rm = FALSE))
ggplot(tb1, aes(fill=n))+
geom_sf()
ggplot(tb1)+
geom_sf(aes(fill = n), color = NA)
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
head(proyecciones)
View(proyecciones)
tb2 <- geo%>%
filter(anio == 2020)%>%
group_by(nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
geo <- read_sf("./data/provincias.geojson")
head(geo)
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
ggplot(geo)+
geom_sf()
df <- readxl::read_xlsx("data/Integrado_HD_base_usuaria_2017-2020.xlsx")
#Formato
patagonia <- df %>% filter(provincia %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO"))
#Join
geo <- geo %>% left_join(patagonia, by=c("nomprov"="provincia"))
tb1 <- geo%>%
filter(anio == 2020) %>%
group_by(nomprov)%>%
summarise(n=n_distinct(Id_hecho, na.rm = FALSE))
ggplot(tb1, aes(fill=n))+
geom_sf()
ggplot(tb1)+
geom_sf(aes(fill = n), color = NA)
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
tb2 <- geo%>%
filter(anio == 2020)%>%
group_by(nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)
library(viridis)
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c()
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos en 2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
tb3 <- geo%>%
group_by(anio, nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
ggplot(tb3)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
facet_grid(vars(anio))+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos 2017-2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(tb3)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
facet_grid(cols = vars(anio))+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos 2017-2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
st_write(tb2, "./data/homicidios_prov_patagonia.geojson")
knitr::opts_chunk$set(echo=FALSE)
library(leaflet)
library(sf)
tb2 <- read_sf("./data/homicidios_prov_patagonia.geojson")
leaflet(tb2)
leaflet(tb2)%>%
addTiles()
head(tb2)
leaflet(tb2)%>%
addTiles()
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
pal <- colorNumeric("viridis", NULL)
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
tb2<-st_transform(tb2, crs = "+init=epsg:4326")
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(leaflet)
library(sf)
tb2 <- read_sf("./data/homicidios_prov_patagonia.geojson")
leaflet(tb2)
leaflet(tb2)%>%
addTiles()
pal <- colorNumeric("viridis", NULL)
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
tb2<-st_transform(tb2, crs = "+init=epsg:4326")
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
load("./data/delitos.rda")
head(delitos)
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud)
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~tipo,
color = ~paleta(tipo))
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
library(ggplot2)
library(plotly)
library(leaflet)
library(sf)
library(gganimate)
library(gifski)
library(dplyr)
library(forcats)
options(scipen = 20)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, comment = "")
load("./data/gapminder.rda")
gapminder_ranking <- gapminder %>%
group_by(across(3)) %>% # agrupa los datos según el valor de la columna "año"
arrange(across(3), across(5, desc)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
load("./data/delitos.rda")
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
paleta2 <- colorNumeric(palette = "viridis", domain = radios$POBLACION / radios$AREA_KM2)
head(gapminder)
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = round(pobl/1000000,2), color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p)
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente, para_plotly = pais)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p, tooltip = c("para_plotly"))
head(delitos)
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
leaflet(siniestros_viales)
leaflet(siniestros_viales) %>%
addTiles()
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud)
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~tipo,
color = ~paleta(tipo))
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10) %>%
addLegend(title = "Tipo de siniestro vial", pal = paleta, values = ~tipo)
library(ggplot2)
library(plotly)
library(leaflet)
library(sf)
library(gganimate)
library(gifski)
library(dplyr)
library(forcats)
options(scipen = 20)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, comment = "")
load("./data/gapminder.rda")
gapminder_ranking <- gapminder %>%
group_by(across(3)) %>% # agrupa los datos según el valor de la columna "año"
arrange(across(3), across(5, desc)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
load("./data/delitos.rda")
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
paleta2 <- colorNumeric(palette = "viridis", domain = radios$POBLACION / radios$AREA_KM2)
head(gapminder)
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = round(pobl/1000000,2), color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p)
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente, para_plotly = pais)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p, tooltip = c("para_plotly"))
head(delitos)
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
leaflet(siniestros_viales)
leaflet(siniestros_viales) %>%
addTiles()
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud)
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~tipo,
color = ~paleta(tipo))
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10) %>%
addLegend(title = "Tipo de siniestro vial", pal = paleta, values = ~tipo)
head(radios)
paleta2 <- colorNumeric(palette = "viridis", domain = radios$POBLACION / radios$AREA_KM2)
leaflet(radios) %>%
addTiles() %>%
addPolygons(popup = ~paste("barrio:", BARRIO, "</br>población:", as.character(POBLACION)),
fillColor = ~paleta2(POBLACION/AREA_KM2))
leaflet(radios) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(popup = ~paste("barrio:", BARRIO, "</br>población:", as.character(POBLACION)),
fillColor = ~paleta2(POBLACION/AREA_KM2),
weight = 0,
fillOpacity = 0.9)
gapminder_ranking <- gapminder %>%
group_by(año) %>% # agrupa los datos según el valor de la columna "año"
arrange(año, desc(pobl)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
gapminder_ranking
gapminder_ranking <- gapminder %>%
group_by(año) %>% # agrupa los datos según el valor de la columna "año"
arrange(año, desc(pobl)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
gapminder_ranking
ggplot(gapminder_ranking) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
facet_wrap(vars(año)) +
labs(y = NULL, x = "población (millones)")
gapminder_anim1 <- ggplot(gapminder_ranking, aes(group = pais)) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
transition_time(año) +
labs(title = "Año: {frame_time}", y = NULL, x = "población (millones)")
gapminder_anim1
gapminder_anim1 <- ggplot(gapminder_ranking) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
transition_time(año) +
labs(title = "Año: {frame_time}", y = NULL, x = "población (millones)")
gapminder_anim1
