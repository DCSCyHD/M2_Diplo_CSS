knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
geo <- read_sf("./data/provincias.geojson")
head(geo)
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
ggplot(geo)+
geom_sf()
df <- readxl::read_xlsx("data/Integrado_HD_base_usuaria_2017-2020.xlsx")
#Formato
patagonia <- df %>% filter(provincia %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO"))
#Join
geo <- geo %>% left_join(patagonia, by=c("nomprov"="provincia"))
tb1 <- geo%>%
filter(anio == 2020) %>%
group_by(nomprov)%>%
summarise(n=n_distinct(Id_hecho, na.rm = FALSE))
ggplot(tb1, aes(fill=n))+
geom_sf()
ggplot(tb1)+
geom_sf(aes(fill = n), color = NA)
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
head(proyecciones)
View(proyecciones)
tb2 <- geo%>%
filter(anio == 2020)%>%
group_by(nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(tidyverse)
library(ggplot2)
library(sf)
geo <- read_sf("./data/provincias.geojson")
head(geo)
geo <- geo %>% filter(nomprov %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO") )
ggplot(geo)+
geom_sf()
df <- readxl::read_xlsx("data/Integrado_HD_base_usuaria_2017-2020.xlsx")
#Formato
patagonia <- df %>% filter(provincia %in% c("NEUQUEN", "RIO NEGRO", "CHUBUT", "SANTA CRUZ", "TIERRA DEL FUEGO"))
#Join
geo <- geo %>% left_join(patagonia, by=c("nomprov"="provincia"))
tb1 <- geo%>%
filter(anio == 2020) %>%
group_by(nomprov)%>%
summarise(n=n_distinct(Id_hecho, na.rm = FALSE))
ggplot(tb1, aes(fill=n))+
geom_sf()
ggplot(tb1)+
geom_sf(aes(fill = n), color = NA)
proyecciones <- read_csv("./data/proyecciones_prov.csv")
head(proyecciones)
geo <- geo %>%
left_join(proyecciones, by = c("nomprov" = "Provincia", "anio")) #Joineo por provincia y año del registro/proyección
tb2 <- geo%>%
filter(anio == 2020)%>%
group_by(nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)
library(viridis)
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c()
ggplot(tb2)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos en 2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
tb3 <- geo%>%
group_by(anio, nomprov, proy)%>%
summarise(n_casos=n_distinct(Id_hecho, na.rm = TRUE))
ggplot(tb3)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
facet_grid(vars(anio))+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos 2017-2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
ggplot(tb3)+
geom_sf(aes(fill = n_casos/proy), color = NA)+
scale_fill_viridis_c(labels = scales::label_comma())+
facet_grid(cols = vars(anio))+
labs(title = "Región Patagónica",
subtitle = "Homicidios dolosos 2017-2020",
fill = "HD/Cant. habitantes")+
theme_minimal()+
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
)
st_write(tb2, "./data/homicidios_prov_patagonia.geojson")
knitr::opts_chunk$set(echo=FALSE)
library(leaflet)
library(sf)
tb2 <- read_sf("./data/homicidios_prov_patagonia.geojson")
leaflet(tb2)
leaflet(tb2)%>%
addTiles()
head(tb2)
leaflet(tb2)%>%
addTiles()
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
pal <- colorNumeric("viridis", NULL)
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
tb2<-st_transform(tb2, crs = "+init=epsg:4326")
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
knitr::opts_chunk$set(echo=FALSE)
knitr::opts_chunk$set(echo=TRUE, message=FALSE, warning=FALSE, collapse=TRUE, highlight=TRUE, paged.print=FALSE, prompt=TRUE, strip.white=FALSE)
library(leaflet)
library(sf)
tb2 <- read_sf("./data/homicidios_prov_patagonia.geojson")
leaflet(tb2)
leaflet(tb2)%>%
addTiles()
pal <- colorNumeric("viridis", NULL)
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
tb2<-st_transform(tb2, crs = "+init=epsg:4326")
leaflet(tb2) %>%
addTiles() %>%
addPolygons(stroke = FALSE, smoothFactor = 0.3, fillOpacity = 0.8,
fillColor = ~pal(n_casos/proy),
label = ~paste0(nomprov, ": ", n_casos/proy))
load("./data/delitos.rda")
head(delitos)
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud)
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~tipo,
color = ~paleta(tipo))
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
