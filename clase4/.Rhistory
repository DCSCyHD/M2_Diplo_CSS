geom_sf(data = byb, aes(color = FUNCION_PRINCIPAL))+
labs(title = "Bares y bibliotecas",
subtitle = "Ciudad Autónoma de Buenos Aires",
color = "Tipo de lugar:")+
theme_minimal()
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
caba <- get_stamenmap(bbox = bbox, "toner", zoom = 12)
ggmap(caba)+
geom_sf(data = byb, aes(color = FUNCION_PRINCIPAL), inherit.aes = FALSE)+
labs(title = "Bares y bibliotecas",
subtitle = "Ciudad Autónoma de Buenos Aires",
color = "Tipo de lugar:")+
theme_void()
#¿Cómo descargo la imagen?
ggsave('./img/bares_y_bibliotecas.png') #Por default guarda el último grafico que generé
library(ggplot2)
library(plotly)
library(leaflet)
library(sf)
library(gganimate)
library(gifski)
library(dplyr)
library(forcats)
options(scipen = 20)
knitr::opts_chunk$set(message = FALSE, warning = FALSE, comment = "")
load("./data/gapminder.rda")
gapminder_ranking <- gapminder %>%
group_by(across(3)) %>% # agrupa los datos según el valor de la columna "año"
arrange(across(3), across(5, desc)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
load("./data/delitos.rda")
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
paleta2 <- colorNumeric(palette = "viridis", domain = radios$POBLACION / radios$AREA_KM2)
head(gapminder)
color_continentes <- c("Europe" = "darkorange", "Asia" = "red", "Africa" = "blue",
"Americas" = "yellow", "Oceania" = "purple")
ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = round(pobl/1000000,2), color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p)
p <- ggplot(filter(gapminder, año == 2007),
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente, para_plotly = pais)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos 2007",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com")
ggplotly(p, tooltip = c("para_plotly"))
head(delitos)
siniestros_viales <- delitos %>%
filter(subtipo == "Siniestro Vial", substr(fecha, 1, 7) == "2020-12")
leaflet(siniestros_viales)
leaflet(siniestros_viales) %>%
addTiles()
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud)
leaflet(siniestros_viales) %>%
addTiles() %>%
addMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~barrio)
paleta <- colorFactor(palette = "Set1", domain = siniestros_viales$tipo)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~tipo,
color = ~paleta(tipo))
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10)
leaflet(siniestros_viales) %>%
addTiles() %>%
addCircleMarkers(lat = ~latitud, lng = ~longitud, popup = ~paste("víctimas fatales:", as.character(cantidad)),
color = ~paleta(tipo), radius = ~cantidad * 10) %>%
addLegend(title = "Tipo de siniestro vial", pal = paleta, values = ~tipo)
head(radios)
paleta2 <- colorNumeric(palette = "viridis", domain = radios$POBLACION / radios$AREA_KM2)
leaflet(radios) %>%
addTiles() %>%
addPolygons(popup = ~paste("barrio:", BARRIO, "</br>población:", as.character(POBLACION)),
fillColor = ~paleta2(POBLACION/AREA_KM2))
leaflet(radios) %>%
addProviderTiles(providers$Stamen.TonerLite) %>%
addPolygons(popup = ~paste("barrio:", BARRIO, "</br>población:", as.character(POBLACION)),
fillColor = ~paleta2(POBLACION/AREA_KM2),
weight = 0,
fillOpacity = 0.9)
gapminder_ranking <- gapminder %>%
group_by(año) %>% # agrupa los datos según el valor de la columna "año"
arrange(año, desc(pobl)) %>% # ordena los miembros de cada grupo por PBI per cápita, de mayor a menor
mutate(ranking = row_number()) %>% # crea una columna numérica con el ranking
filter(ranking <= 10) # retiene solo el "top ten" y descarta las demás filas
gapminder_ranking
ggplot(gapminder_ranking) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
facet_wrap(vars(año)) +
labs(y = NULL, x = "población (millones)")
gapminder_anim1 <- ggplot(gapminder_ranking) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
transition_time(año) +
labs(title = "Año: {frame_time}", y = NULL, x = "población (millones)")
gapminder_anim1
gapminder_anim1 <- ggplot(gapminder_ranking) +
geom_col(aes(x = pobl / 1000000, y = factor(ranking), fill = continente)) +
geom_text(aes(x = pobl / 1000000, y = factor(ranking), label = pais)) +
scale_fill_manual(values = color_continentes) +
theme_minimal() +
transition_time(año) +
labs(title = "Año: {frame_time}", y = NULL, x = "población (millones)")
gapminder_anim1
ggplot(gapminder,
aes(x = PBIpc, y = expVida, size = pobl/1000000, color = continente)) +
geom_point() +
scale_x_log10() +
scale_colour_manual(values = color_continentes) +
guides(size = "none") +
theme_minimal() +
labs(title = "Riqueza vs. salud en los países del mundo", subtitle = "según datos {frame_time}",
size = "población (millones)",
x = "PBI per capita (USD)", y = "expectativa de vida en años",
caption = "fuente: Gapminder, www.gapminder.com") +
transition_time(año)
library(tidyverse)
library(purrr)
library(sf)
library(sp)
data <- st_read('/home/laia/Descargas/training_polygons.geojson')
ggplot(data)+
geom_sf()
ggplot()+
geom_sf(data = data)
library(ggplot2)
library(sf)
library(ggmap)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
subte_lineas <- read_sf("http://bitsandbricks.github.io/data/subte_lineas.geojson")
subte_estaciones <- read_sf("http://bitsandbricks.github.io/data/subte_estaciones.geojson")
color_lineas <- c("A" = "cyan", "B" = "red", "C" = "blue",
"D" = "darkgreen", "E" = "purple", "H" = "yellow")
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
head(radios)
ggplot(radios) +
geom_sf()
ggplot(radios) +
geom_sf(aes(fill = POBLACION))
ggplot(radios) +
geom_sf(aes(fill = POBLACION), color = NA)
ggplot(radios) +
geom_sf(aes(fill = POBLACION/AREA_KM2), color = NA)
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c()
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Densidad de población",
fill = "hab/km2") +
theme_void()
subte_lineas
head(subte_estaciones)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas) +
geom_sf(data = subte_estaciones)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA))
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA))
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA)) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void()
color_lineas <- c("A" = "cyan", "B" = "red", "C" = "blue",
"D" = "darkgreen", "E" = "purple", "H" = "yellow")
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA)) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
ggmap(mapa_CABA)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
ggmap(mapa_CABA_toner)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Densidad de población",
fill = "hab/km2") +
theme_void()
library(ggplot2)
library(sf)
library(ggmap)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
subte_lineas <- read_sf("http://bitsandbricks.github.io/data/subte_lineas.geojson")
subte_estaciones <- read_sf("http://bitsandbricks.github.io/data/subte_estaciones.geojson")
color_lineas <- c("A" = "cyan", "B" = "red", "C" = "blue",
"D" = "darkgreen", "E" = "purple", "H" = "yellow")
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
head(radios)
ggplot(radios) +
geom_sf()
ggplot(radios) +
geom_sf(aes(fill = POBLACION))
ggplot(radios) +
geom_sf(aes(fill = POBLACION), color = NA)
ggplot(radios) +
geom_sf(aes(fill = POBLACION/AREA_KM2), color = NA)
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c()
library(ggplot2)
library(sf)
library(ggmap)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
subte_lineas <- read_sf("http://bitsandbricks.github.io/data/subte_lineas.geojson")
subte_estaciones <- read_sf("http://bitsandbricks.github.io/data/subte_estaciones.geojson")
color_lineas <- c("A" = "cyan", "B" = "red", "C" = "blue",
"D" = "darkgreen", "E" = "purple", "H" = "yellow")
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
head(radios)
st_crs(radios)
st_transform(radios, 3857)
radios_mercator <- st_transform(radios, 3857)
st_crs(radios_mercator)
library(ggplot2)
library(sf)
radios <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
head(radios)
st_crs(radios)
radios_mercator <- st_transform(radios, 3857)
st_crs(radios_mercator)
ggplot(radios) +
geom_sf()
ggplot(radios) +
geom_sf(aes(fill = POBLACION))
ggplot(radios) +
geom_sf(aes(fill = POBLACION), color = NA)
ggplot(radios) +
geom_sf(aes(fill = POBLACION/AREA_KM2), color = NA)
ggplot(radios) +
geom_sf(aes(fill = POBLACION/AREA_KM2), lwd = 0)
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c()
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Densidad de población",
fill = "hab/km2") +
theme_void()
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Densidad de población",
fill = "hab/km2") +
theme_minimal()
ggplot() +
geom_sf(data = radios, aes(fill = POBLACION/AREA_KM2), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Densidad de población",
fill = "hab/km2") +
theme_void()
subte_lineas <- read_sf("http://bitsandbricks.github.io/data/subte_lineas.geojson")
subte_lineas <- read_sf("http://bitsandbricks.github.io/data/subte_lineas.geojson")
subte_lineas
subte_estaciones <- read_sf("http://bitsandbricks.github.io/data/subte_estaciones.geojson")
head(subte_estaciones)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas) +
geom_sf(data = subte_estaciones)
ggplot() +
geom_sf(data = radios) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA))
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA))
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA)) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void()
color_lineas <- c("A" = "cyan", "B" = "red", "C" = "blue",
"D" = "darkgreen", "E" = "purple", "H" = "yellow")
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA)) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
library(ggmap)
ggplot() +
geom_sf(data = radios, color = NA) +
geom_sf(data = subte_lineas, aes(color = LINEA)) +
geom_sf(data = subte_estaciones, aes(color = LINEA)) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_minimal() +
scale_color_manual(values = color_lineas)
st_bbox(radios)
bbox <- st_bbox(radios)
names(bbox) <- c("left", "bottom", "right", "top")
bbox
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
mapa_CABA
ggmap(mapa_CABA)
mapa_CABA <- get_stamenmap(bbox, zoom = 17)
mapa_CABA2 <- get_stamenmap(bbox, zoom = 10)
ggmap(mapa_CABA2)
ggmap(mapa_CABA)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
ggmap(mapa_CABA_toner)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
mapa_CABA_toner <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 15)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
ggmap(mapa_CABA_toner) +
geom_sf(data = subte_lineas, aes(color = LINEA), inherit.aes = FALSE) +
geom_sf(data = subte_estaciones, aes(color = LINEA), inherit.aes = FALSE) +
labs(title = "Sistema de transporte subterráneo (SUBTE)",
subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void() +
scale_color_manual(values = color_lineas)
library(ggplot2)
library(sf)
CABA_mapa <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
CABA_mapa
ggplot(CABA_mapa) +
geom_sf()
CABA_mapa
ggplot(CABA_mapa) +
geom_sf(aes(fill = HOGARES_NBI/HOGARES), color = NA) +
scale_fill_viridis_c() +
labs(title = "Ciudad Autónoma de Buenos Aires",
subtitle = "Hogares con NBI",
fill = "Hogares con NBI sobre total de hogares")
bares <- read_sf('./data/espacios-culturales.geojson')
bares
ggplot() +
geom_sf(data = CABA_mapa) +
geom_sf(data = bares)
espacios_culturales <- read_sf('./data/espacios-culturales.geojson')
library(tidyverse)
espacios_culturales <- read_sf('./data/espacios-culturales.geojson')
bares <- filter(espacios_culturales, FUNCION_PRINCIPAL == "BAR")
ggplot() +
geom_sf(data = CABA_mapa) +
geom_sf(data = bares)
CABA_mapa <- read_sf("https://bitsandbricks.github.io/data/CABA_rc.geojson")
ggplot(CABA_mapa) +
geom_sf()
library(tidyverse)
espacios_culturales <- read_sf('./data/espacios-culturales.geojson')
bares <- filter(espacios_culturales, FUNCION_PRINCIPAL == "BAR")
ggplot() +
geom_sf(data = CABA_mapa) +
geom_sf(data = bares)
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
library(ggmap)
bbox <- st_bbox(CABA_mapa)
names(bbox) <- c("left", "bottom", "right", "top")
bbox
mapa_CABA <- get_stamenmap(bbox, zoom = 12)
ggmap(mapa_CABA)
mapa_CABA_ <- get_stamenmap(bbox, maptype = "toner-lite", zoom = 12)
ggmap(mapa_CABA_)
ggmap(mapa_CABA_) +
geom_sf(data = bares, inherit.aes = FALSE) +
labs(title = "Bares", subtitle = "Ciudad Autónoma de Buenos Aires") +
theme_void()
espacios_culturales
# Versión 1:
ccul_caba <- espacios_culturales %>% filter(FUNCION_PRINCIPAL == "CENTRO CULTURAL")
#bares y centros culturales
ggmap(mapa_CABA_)+
geom_sf(data = bares, aes(color = FUNCION_PRINCIPAL), inherit.aes = FALSE) +
geom_sf(data = ccul_caba, aes(color = FUNCION_PRINCIPAL), inherit.aes = FALSE) +
labs(title = "Bares y centros culturales CABA") +
theme_void()
espacios <- filter(espacios_culturales, FUNCION_PRINCIPAL == "BAR" | FUNCION_PRINCIPAL == "BIBLIOTECA")
ggmap(mapa_CABA_) +
geom_sf(data = espacios, inherit.aes = F, aes(color = FUNCION_PRINCIPAL))+
scale_color_viridis_d()+
theme_void()
#bares y centros culturales
ggmap(mapa_CABA_)+
geom_sf(data = bares, aes(color = SUBCATEGORIA), inherit.aes = FALSE) +
geom_sf(data = ccul_caba, aes(color = SUBCATEGORIA), inherit.aes = FALSE) +
labs(title = "Bares y centros culturales CABA") +
theme_void()
#bares y centros culturales
ggmap(mapa_CABA_)+
geom_sf(data = bares, aes(color = FUNCION_PRINCIPAL), inherit.aes = FALSE) +
geom_sf(data = ccul_caba, aes(color = FUNCION_PRINCIPAL), inherit.aes = FALSE) +
labs(title = "Bares y centros culturales CABA") +
theme_void()
#bares y centros culturales
ggmap(mapa_CABA_)+
geom_sf(data = bares, aes(color = SUBCATEGORIA), inherit.aes = FALSE) +
geom_sf(data = ccul_caba, aes(color = SUBCATEGORIA), inherit.aes = FALSE) +
labs(title = "Bares y centros culturales CABA") +
theme_void()
#bares y centros culturales
ggmap(mapa_CABA_)+
geom_sf(data = bares, aes(color = SUBCATEGORIA), inherit.aes = FALSE) +
geom_sf(data = ccul_caba, color = "black", inherit.aes = FALSE) +
labs(title = "Bares y centros culturales CABA") +
theme_void()
